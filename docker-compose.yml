services:
  # reference: https://sanidhya235.medium.com/introduction-to-minio-193e8523a4a8
  # reference: https://mlflow.org/docs/latest/tracking/tutorials/remote-server.html
  minio:
    image: quay.io/minio/minio
    volumes:
      - ./data:/data # mount container 'data' directory to 'data' directory of local machine in case of outage.
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: "minio_user"
      MINIO_ROOT_PASSWORD: "minio_password"
      MINIO_ADDRESS: ":9000"
      MINIO_CONSOLE_ADDRESS: ":9001"

    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 1s
      timeout: 10s
      retries: 5
    command: minio server /data

  # Create a bucket named "bucket" if it doesn't exist
  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      bash -c "
      mc alias set minio http://minio:9000 minio_user minio_password &&
      if ! mc ls minio | grep --quiet bucket; then
        mc mb minio/bucket
      else
        echo 'bucket already exists'
      fi
      "
